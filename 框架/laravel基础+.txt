安装laravel框架{
	composer create-project laravel/laravel laravel
}
----------------------
运行laravel{
	php -S localhost：8888 -t public
	php artisan serve
}
-----------------------
命令创建控制器
php artisan make：controller IndexController
命令行创建没有预定义的控制器
php artisan make：controller IndexController  --plain
访问路由
Route::get("/","控制器@方法名");
-------------------------
控制器往视图层传值
return view('view下的对应文件.路由名称')->with('name',$name);
控制器往视图层传数组
1>>>>>>>>>>
	return view('view下的对应文件.路由名称')->with([
			'name'=>"nameuser",
			'age'=>"18"
		]);
2>>>>>>>>>>>
	$data['name']="nameuser";
	$data['age']=18;
	return view('view下的对应文件.路由名称',$data);
3>>>>>>>>>>>
	$name="nameuser";
	$age=18;
	return view('view下的对应文件.路由名称',compact('name','age'));		//如果是数组compact('不加$的数组名')
使用blade的方法-->>接到的值是name
转意：{{ $name }}	不转意：{!! $name !!}
-------------------------
创建公共的布局
	在views下创建一个文件 （app.blade.php）
	公共文件放进去，不是公共不分的用@yield('别名');		比如(@yield('content'))
	不是公共的文件
	@extends('文件的名') 								比如(@extends('app'))
	@section('别名')									比如(@section('content'))
	不是公共的弄容
	@stop
	可以写多个公共的地方>>>>>>>>>>>>
视图层if和else的使用
	@if(条件)
		*******************if
	@else
		*******************else
	@endif
foreach的使用
	@foreach(数组 as $k => $v)
		{{ $v }}
	@endforeach
----------------------------
连接数据库
找到.env
	DB_CONNECTION=mysql
	DB_HOST=127.0.0.1
	DB_PORT=3306
	DB_DATABASE=数据库名
	DB_USERNAME=用户名
	DB_PASSWORD=密码
------------------------------
命令生成2个表
php artisan migrate
撤销上次命令
php artisan migrate:rollback
创建database下没有的文件夹
php artisan make:migration create_表名_table --create=表名
设置database下的对应的表
执行php artisan migrate
添加字段
php artisan make:migration add_字段_to_表名 --table=表名
php artisan make:migration add_字段_column_to_表名 --table=表名
添加字段可以用composter
composer require doctrine/dbal
---------------------------------
命令创建model，存在app下{model和表名一致}
php artisan make:model 模型名
进入添加
php artisan tinker
实例化model
$model = new App\model;
$model->title="******";
$model->content="****";
$model->published_at=Carbon\Carbon::now();		//添加时间
$model;
$model->save();
查看
$model->toArry();
查找1条数据
$newModel=App\model::find(1);
更新
$newModel->字段="新值";
$newModel->save();
条件查找，返回的是数据集，比较全	'='可以省略
$whereModel=App\model::where('字段','=','value')->get();
取第一条数据		可以取值：whereModel->字段名;
$whereModel=App\model::where('字段','=','value')->first();
解除添加数据受保护
在model中的class加入protected $fillable=['key1','key2','key3','···'];
添加数据
$model=App\model::create(['字段1'=>'value1','字段2'=>'value2',···,'published_at'=>Carbon\Carbon::now()]);
修改多个数据
$model->update(['title'=>'value']);
删除数据
$model=App\model::find($id);
$model->delete();
App\model::destroy($id);
App\model::destroy([1,2,3,4,5]);
App\model::destroy(1,2,3,4,5);
----------------------------
controller代码
引入model
use App\Model;
查找所有数据
$model=Model::all();
href跳转方法
href="/路由/{{ $data->id }}";
href="{{ url('路由',$data->id)}}";
href="{{ action('控制器 @ 方法名',$data->id)}}";
---------------------------------
安装laravel的表单
composer require laravelcollective/html
删除
composer remove illuminate/html
------------------------------------
接值+验证
public function action(Request $request)
{
	//提交验证
	$this->validate($request,['字段1'=>'required','字段2'=>'required']);
	//接值[Article::create是数据库]
	Article::create($request->all());
}
-------------------------
省去路由的书写
Route::resource('控制器的前缀','控制器');
----------------------------
限制访问次数
路由后面->middleware('throttle:访问次数');
-------------------------------
laravel 5.3和5.2的区别
5.3下app里有4个文件夹
路由跑在个目录下了
---------------------------------







